#! /usr/bin/awk -f
#
# This program parses the lines from a iRODS log file into log entries.
#
# This program reads from standard input and writes to standard output.
#
# Here's an example entry:
#
#     • Jan 21 18:20:57 pid:17536 ERROR: [-]    iRODS/server/core/src/rsApiHandler.cpp:520:readAndProcClientMsg :  status [SYS_HEADER_READ_LEN_ERR]  errno [] -- message []
#            [-]     iRODS/lib/core/src/sockComm.cpp:199:readMsgHeader :  status [SYS_HEADER_READ_LEN_ERR]  errno [] -- message [failed to call 'read header']
#                 [-]     libtcp.cpp:197:tcp_read_msg_header :  status [SYS_HEADER_READ_LEN_ERR]  errno [] -- message [only read [0] of [4]]
#
# Each entry is prefixed with a "• ". If a log entry has a carriage return in it,
# the new line is indented two spaces. Before processing a line, all leading
# whitespace is removed.


BEGIN {
  currentEntry = "";
}


/^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [ 1-3][0-9] [0-2][0-9]:[0-5][0-9]:[0-5][0-9] / {
  # Ensure days are two digits
  if ($2 ~ /^[1-9]$/) {
    $2 = "0" $2;
  }

  print currentEntry;
  currentEntry = "";
}


NF > 0 {
  if (currentEntry == "") {
    currentEntry = "• " $0;
  } else {
    currentEntry = currentEntry "\n  " $0;
  }
}


END {
  print currentEntry;
}
