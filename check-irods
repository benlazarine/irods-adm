#!/bin/bash

readonly TestFileSize=$((64 * 1024 * 1024))


display_errors()
{
  local resource="$1"

  while IFS= read -r
  do
    if [ -n "$REPLY" ]
    then
      printf '(%s) %s\n' "$resource" "$REPLY" >&2
    fi
  done
}


log_status()
{
  local system="$1"
  local status="$2"

  printf '%s %s\n' "$system" "$status"
}


test_resource()
{
  local resource="$1"
  local file="$2"

  while true
  do
    obj=check-irods-$(date '+%s')."$RANDOM"

    if ! resp=$(timeout 1m iput -R "$resource" "$file" "$obj" 2>&1)
    then
      if [[ "$resp" =~ OVERWRITE_WITHOUT_FORCE_FLAG ]]
      then
        continue
      fi

      printf '%s\n' "$resp" >&2
      log_status "$resource" fail
    else
      log_status "$resource" ok
    fi

    return 0
  done
}


if ! testFile=$(mktemp)
then
  log_status '*' error
  exit 1
fi

if ! trap 'rm --force "$testFile"' EXIT
then
  log_status '*' error
  exit 1
fi

if ! truncate --size "$TestFileSize" "$testFile"
then
  log_status '*' error
  exit 1
fi

if lsrescResp=$(ilsresc)
then
  log_status IES ok
else
  log_status IES fail
  exit 0
fi

resources=()

while IFS= read -r
do
  resources+=("$REPLY")
done < <(sed --quiet 's/^\([A-Za-z][^:]*\).*/\1/p' <<< "$lsrescResp")

for resource in "${resources[@]}"
do
  test_resource "$resource" "$testFile" 2> >(display_errors "$resource") &
done | sort --ignore-case --key 1
